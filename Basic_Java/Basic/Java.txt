what is java ?
Ans:
Java is a high level,robust,object oriented,platform independent and secure programming language.
High level:
    Easy to understand and simple
Robust:
    Robust means strong memory management through garbage collector
Object-Oriented:
    Because the set of class and object
Platform Independent:
    Due to Bytecode and JVM
    bcz java program can run on any device
Secure programming language:
    due to sandbox mechanism
    Lack of pointers
    1. Sandbox mechanism:
         it provide a layer that means external application does not effect on internal application and internal application does not effect on external application.
    2. Lack of pointers:
         java does not support pointers explicitly but internally supported
      
top features of java :
    1.Platform independent:
    2.Object Oriented
    3.High level
    4.Robust
    5.Secure
    6.Simple:
        Java is very easy to learn, and its syntax is simple, clean and easy to understand.
    7.Architectue neutral:
        Java is architecture neutral because there are no implementation dependent features
    8.Interpreted:
        Java is distributed because it facilitates users to create distributed applications in Java
    9.Portable:
        Java is portable because it facilitates you to carry the Java bytecode to any platform.
    9.High performance::
        because Java bytecode: 
    10.Multithreaded:
         We can write Java programs that deal with many tasks at once by defining multiple threads. The main advantage of multi-threading is that it doesn't occupy memory for each thread. It shares a common memory area. 
    11.Distributed:
        Java is distributed because it facilitates users to create distributed applications in Java.
    12.Dynamic:
        Java is a dynamic language. It supports the dynamic loading of classes. It means classes are loaded on demand.
JDK , JRE, JVM :
JDK:
   JDK is a develpment tool kit used for develop java applications.
   combination of JRE+compiler
JRE:
   JRE is a java runtime environment can used for execute the code.
   combination of JVM+library files
JVM:
   Java Virtual machine
   Used for recompile the code and runs java byte code 

JVM internal functionality :
1.Class Loader:
    Loads the bytecode of java program into memory
2.Bytecode verifier:
    check the bytecode or not 
3.JIT compiler:
    Just In Time compiler
    Read the bytecode and recompile the code
4.GC:
    Garbage collector
    It is used for free the memory from unused objects and variables
5.memory:
    JVM allocates memory for classes,objects in runtime

code explanation :
public class First{
    public static void main(String[] args){
        System.out.print("Hello World");
    }
}

public:access modifier
class:keyword
    =>used for create class and clas first letter is capital
First:classname

public static void main(String[] args):command line argument
2 types:
array length argument
variable length argument:var args:(...)->ellapse

public:access modifier
static:keyword=>used for save memory
void:returntype
main:predefined method
String:class
args:object

System.out.print():Singleton pattern
System:class
out:object
print:method:printstream class
.-> dot operator

what is bytecode ? 
    bytecode is platform independent code generated by java compiler
    stored:.class file 
    Light weight


Program for all datatype in one print
public class Data{
    public static void main(String[] args){
        byte a=5;
        short b=458;
        int c=45678;
        float d=45.2f;
        double e=4589.256;
        char f='f';
        boolean g=true;
        long h=4578921;
        System.out.print("byte:"+a+"Short:"+b+"Int:"+c+"Float:"+d+"double:"+e+"Char:"+f+"Boolean"+g+"Long:"+h);
    }
}